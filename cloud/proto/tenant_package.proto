syntax = "proto3";
// tenant_package 租户套餐
package tenant;
option go_package = "cloud/service/tenant;tenant";
import "google/protobuf/timestamp.proto";
import "pagination.proto";

// TenantPackageObject 数据对象
message TenantPackageObject {
	// @inject_tag: gorm:"primaryKey;autoIncrement;column:id" json:"id"
	optional int64 id = 1; //编号
	// @inject_tag: gorm:"column:name" json:"name"
	optional string name = 2; //名称
	// @inject_tag: gorm:"column:scope_menu" json:"scopeMenu"
	optional bytes scope_menu = 3; //数据范围
	// @inject_tag: gorm:"column:sort" json:"sort"
	optional int32 sort = 4; //排序
	// @inject_tag: gorm:"column:status" json:"status"
	optional int32 status = 5; //状态:0正常/1停用
	// @inject_tag: gorm:"column:remark" json:"remark"
	optional string remark = 6; //备注
	// @inject_tag: gorm:"column:creator" json:"creator"
	optional string creator = 7; //创建人
	// @inject_tag: gorm:"column:create_time" json:"createTime"
	google.protobuf.Timestamp create_time = 8; //创建时间
	// @inject_tag: gorm:"column:updater" json:"updater"
	optional string updater = 9; //更新人
	// @inject_tag: gorm:"column:update_time" json:"updateTime"
	google.protobuf.Timestamp update_time = 10; //更新时间
}
// TenantPackageTotalResponse 列表数据总量
message TenantPackageTotalResponse {
	int64 code = 1;
	string msg = 2;
	int64 data = 3;
}
// TenantPackageCreateRequest 创建数据请求
message TenantPackageCreateRequest {
	TenantPackageObject data = 1;
}
// TenantPackageCreateResponse 创建数据响应
message TenantPackageCreateResponse {
	int64 code = 1;
	string msg = 2;
	int64 data = 3;
}
// TenantPackageUpdateRequest 更新数据请求
message TenantPackageUpdateRequest {
	// @inject_tag: gorm:"column:id" json:"id"
	int64 id = 1; //编号
	TenantPackageObject data = 2;
}
// TenantPackageUpdateResponse 更新数据响应
message TenantPackageUpdateResponse {
	int64 code = 1;
	string msg = 2;
}
// TenantPackageDeleteRequest 删除数据请求
message TenantPackageDeleteRequest {
	// @inject_tag: gorm:"column:id" json:"id"
	int64 id = 1; //编号
}
// TenantPackageDeleteResponse 删除数据响应
message TenantPackageDeleteResponse {
	int64 code = 1;
	string msg = 2;
}
// TenantPackageRequest 查询单条数据请求
message TenantPackageRequest {
	// @inject_tag: gorm:"column:id" json:"id"
	int64 id = 1; //编号
}
// TenantPackageResponse 查询单条数据响应
message TenantPackageResponse {
	int64 code = 1;
	string msg = 2;
	TenantPackageObject data = 3;
}
// TenantPackageListRequest 列表数据
message TenantPackageListRequest {
	
	// @inject_tag: db:"status" json:"status"
	optional int32 status = 1; // 状态:0正常/1停用
	// @inject_tag: db:"name" json:"name"
	optional string name = 2; // 名称

	// @inject_tag: json:"pagination"
	optional pagination.PaginationRequest pagination = 3; // 分页
}

// TenantPackageListResponse 数据响应
message TenantPackageListResponse {
	int64 code = 1;
  	string msg = 2;
	repeated TenantPackageObject data = 3;
}
// TenantPackageListTotalRequest 列表数据
message TenantPackageListTotalRequest {
	
	// @inject_tag: db:"status" json:"status"
	optional int32 status = 1; // 状态:0正常/1停用
	// @inject_tag: db:"name" json:"name"
	optional string name = 2; // 名称

}


// TenantPackageService 服务
service TenantPackageService{
	rpc TenantPackageCreate(TenantPackageCreateRequest) returns (TenantPackageCreateResponse);
	rpc TenantPackageUpdate(TenantPackageUpdateRequest) returns (TenantPackageUpdateResponse);
	rpc TenantPackageDelete(TenantPackageDeleteRequest) returns (TenantPackageDeleteResponse);
	rpc TenantPackage(TenantPackageRequest) returns (TenantPackageResponse);
	rpc TenantPackageList(TenantPackageListRequest) returns (TenantPackageListResponse);
	rpc TenantPackageListTotal(TenantPackageListTotalRequest) returns (TenantPackageTotalResponse);
}