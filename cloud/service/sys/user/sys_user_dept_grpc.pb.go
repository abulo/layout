// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.33.0
// source: sys_user_dept.proto

// sys_user_dept 用户部门

package user

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SysUserDeptService_SysUserDeptCreate_FullMethodName    = "/user.SysUserDeptService/SysUserDeptCreate"
	SysUserDeptService_SysUserDeptUpdate_FullMethodName    = "/user.SysUserDeptService/SysUserDeptUpdate"
	SysUserDeptService_SysUserDeptDelete_FullMethodName    = "/user.SysUserDeptService/SysUserDeptDelete"
	SysUserDeptService_SysUserDept_FullMethodName          = "/user.SysUserDeptService/SysUserDept"
	SysUserDeptService_SysUserDeptItem_FullMethodName      = "/user.SysUserDeptService/SysUserDeptItem"
	SysUserDeptService_SysUserDeptList_FullMethodName      = "/user.SysUserDeptService/SysUserDeptList"
	SysUserDeptService_SysUserDeptListTotal_FullMethodName = "/user.SysUserDeptService/SysUserDeptListTotal"
)

// SysUserDeptServiceClient is the client API for SysUserDeptService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// SysUserDeptService 服务
type SysUserDeptServiceClient interface {
	SysUserDeptCreate(ctx context.Context, in *SysUserDeptCreateRequest, opts ...grpc.CallOption) (*SysUserDeptCreateResponse, error)
	SysUserDeptUpdate(ctx context.Context, in *SysUserDeptUpdateRequest, opts ...grpc.CallOption) (*SysUserDeptUpdateResponse, error)
	SysUserDeptDelete(ctx context.Context, in *SysUserDeptDeleteRequest, opts ...grpc.CallOption) (*SysUserDeptDeleteResponse, error)
	SysUserDept(ctx context.Context, in *SysUserDeptRequest, opts ...grpc.CallOption) (*SysUserDeptResponse, error)
	SysUserDeptItem(ctx context.Context, in *SysUserDeptItemRequest, opts ...grpc.CallOption) (*SysUserDeptItemResponse, error)
	SysUserDeptList(ctx context.Context, in *SysUserDeptListRequest, opts ...grpc.CallOption) (*SysUserDeptListResponse, error)
	SysUserDeptListTotal(ctx context.Context, in *SysUserDeptListTotalRequest, opts ...grpc.CallOption) (*SysUserDeptTotalResponse, error)
}

type sysUserDeptServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSysUserDeptServiceClient(cc grpc.ClientConnInterface) SysUserDeptServiceClient {
	return &sysUserDeptServiceClient{cc}
}

func (c *sysUserDeptServiceClient) SysUserDeptCreate(ctx context.Context, in *SysUserDeptCreateRequest, opts ...grpc.CallOption) (*SysUserDeptCreateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SysUserDeptCreateResponse)
	err := c.cc.Invoke(ctx, SysUserDeptService_SysUserDeptCreate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysUserDeptServiceClient) SysUserDeptUpdate(ctx context.Context, in *SysUserDeptUpdateRequest, opts ...grpc.CallOption) (*SysUserDeptUpdateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SysUserDeptUpdateResponse)
	err := c.cc.Invoke(ctx, SysUserDeptService_SysUserDeptUpdate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysUserDeptServiceClient) SysUserDeptDelete(ctx context.Context, in *SysUserDeptDeleteRequest, opts ...grpc.CallOption) (*SysUserDeptDeleteResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SysUserDeptDeleteResponse)
	err := c.cc.Invoke(ctx, SysUserDeptService_SysUserDeptDelete_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysUserDeptServiceClient) SysUserDept(ctx context.Context, in *SysUserDeptRequest, opts ...grpc.CallOption) (*SysUserDeptResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SysUserDeptResponse)
	err := c.cc.Invoke(ctx, SysUserDeptService_SysUserDept_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysUserDeptServiceClient) SysUserDeptItem(ctx context.Context, in *SysUserDeptItemRequest, opts ...grpc.CallOption) (*SysUserDeptItemResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SysUserDeptItemResponse)
	err := c.cc.Invoke(ctx, SysUserDeptService_SysUserDeptItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysUserDeptServiceClient) SysUserDeptList(ctx context.Context, in *SysUserDeptListRequest, opts ...grpc.CallOption) (*SysUserDeptListResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SysUserDeptListResponse)
	err := c.cc.Invoke(ctx, SysUserDeptService_SysUserDeptList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysUserDeptServiceClient) SysUserDeptListTotal(ctx context.Context, in *SysUserDeptListTotalRequest, opts ...grpc.CallOption) (*SysUserDeptTotalResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SysUserDeptTotalResponse)
	err := c.cc.Invoke(ctx, SysUserDeptService_SysUserDeptListTotal_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SysUserDeptServiceServer is the server API for SysUserDeptService service.
// All implementations must embed UnimplementedSysUserDeptServiceServer
// for forward compatibility.
//
// SysUserDeptService 服务
type SysUserDeptServiceServer interface {
	SysUserDeptCreate(context.Context, *SysUserDeptCreateRequest) (*SysUserDeptCreateResponse, error)
	SysUserDeptUpdate(context.Context, *SysUserDeptUpdateRequest) (*SysUserDeptUpdateResponse, error)
	SysUserDeptDelete(context.Context, *SysUserDeptDeleteRequest) (*SysUserDeptDeleteResponse, error)
	SysUserDept(context.Context, *SysUserDeptRequest) (*SysUserDeptResponse, error)
	SysUserDeptItem(context.Context, *SysUserDeptItemRequest) (*SysUserDeptItemResponse, error)
	SysUserDeptList(context.Context, *SysUserDeptListRequest) (*SysUserDeptListResponse, error)
	SysUserDeptListTotal(context.Context, *SysUserDeptListTotalRequest) (*SysUserDeptTotalResponse, error)
	mustEmbedUnimplementedSysUserDeptServiceServer()
}

// UnimplementedSysUserDeptServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSysUserDeptServiceServer struct{}

func (UnimplementedSysUserDeptServiceServer) SysUserDeptCreate(context.Context, *SysUserDeptCreateRequest) (*SysUserDeptCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserDeptCreate not implemented")
}
func (UnimplementedSysUserDeptServiceServer) SysUserDeptUpdate(context.Context, *SysUserDeptUpdateRequest) (*SysUserDeptUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserDeptUpdate not implemented")
}
func (UnimplementedSysUserDeptServiceServer) SysUserDeptDelete(context.Context, *SysUserDeptDeleteRequest) (*SysUserDeptDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserDeptDelete not implemented")
}
func (UnimplementedSysUserDeptServiceServer) SysUserDept(context.Context, *SysUserDeptRequest) (*SysUserDeptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserDept not implemented")
}
func (UnimplementedSysUserDeptServiceServer) SysUserDeptItem(context.Context, *SysUserDeptItemRequest) (*SysUserDeptItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserDeptItem not implemented")
}
func (UnimplementedSysUserDeptServiceServer) SysUserDeptList(context.Context, *SysUserDeptListRequest) (*SysUserDeptListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserDeptList not implemented")
}
func (UnimplementedSysUserDeptServiceServer) SysUserDeptListTotal(context.Context, *SysUserDeptListTotalRequest) (*SysUserDeptTotalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserDeptListTotal not implemented")
}
func (UnimplementedSysUserDeptServiceServer) mustEmbedUnimplementedSysUserDeptServiceServer() {}
func (UnimplementedSysUserDeptServiceServer) testEmbeddedByValue()                            {}

// UnsafeSysUserDeptServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SysUserDeptServiceServer will
// result in compilation errors.
type UnsafeSysUserDeptServiceServer interface {
	mustEmbedUnimplementedSysUserDeptServiceServer()
}

func RegisterSysUserDeptServiceServer(s grpc.ServiceRegistrar, srv SysUserDeptServiceServer) {
	// If the following call pancis, it indicates UnimplementedSysUserDeptServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SysUserDeptService_ServiceDesc, srv)
}

func _SysUserDeptService_SysUserDeptCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserDeptCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysUserDeptServiceServer).SysUserDeptCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysUserDeptService_SysUserDeptCreate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysUserDeptServiceServer).SysUserDeptCreate(ctx, req.(*SysUserDeptCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysUserDeptService_SysUserDeptUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserDeptUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysUserDeptServiceServer).SysUserDeptUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysUserDeptService_SysUserDeptUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysUserDeptServiceServer).SysUserDeptUpdate(ctx, req.(*SysUserDeptUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysUserDeptService_SysUserDeptDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserDeptDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysUserDeptServiceServer).SysUserDeptDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysUserDeptService_SysUserDeptDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysUserDeptServiceServer).SysUserDeptDelete(ctx, req.(*SysUserDeptDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysUserDeptService_SysUserDept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserDeptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysUserDeptServiceServer).SysUserDept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysUserDeptService_SysUserDept_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysUserDeptServiceServer).SysUserDept(ctx, req.(*SysUserDeptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysUserDeptService_SysUserDeptItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserDeptItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysUserDeptServiceServer).SysUserDeptItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysUserDeptService_SysUserDeptItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysUserDeptServiceServer).SysUserDeptItem(ctx, req.(*SysUserDeptItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysUserDeptService_SysUserDeptList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserDeptListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysUserDeptServiceServer).SysUserDeptList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysUserDeptService_SysUserDeptList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysUserDeptServiceServer).SysUserDeptList(ctx, req.(*SysUserDeptListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysUserDeptService_SysUserDeptListTotal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserDeptListTotalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysUserDeptServiceServer).SysUserDeptListTotal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysUserDeptService_SysUserDeptListTotal_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysUserDeptServiceServer).SysUserDeptListTotal(ctx, req.(*SysUserDeptListTotalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SysUserDeptService_ServiceDesc is the grpc.ServiceDesc for SysUserDeptService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SysUserDeptService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "user.SysUserDeptService",
	HandlerType: (*SysUserDeptServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SysUserDeptCreate",
			Handler:    _SysUserDeptService_SysUserDeptCreate_Handler,
		},
		{
			MethodName: "SysUserDeptUpdate",
			Handler:    _SysUserDeptService_SysUserDeptUpdate_Handler,
		},
		{
			MethodName: "SysUserDeptDelete",
			Handler:    _SysUserDeptService_SysUserDeptDelete_Handler,
		},
		{
			MethodName: "SysUserDept",
			Handler:    _SysUserDeptService_SysUserDept_Handler,
		},
		{
			MethodName: "SysUserDeptItem",
			Handler:    _SysUserDeptService_SysUserDeptItem_Handler,
		},
		{
			MethodName: "SysUserDeptList",
			Handler:    _SysUserDeptService_SysUserDeptList_Handler,
		},
		{
			MethodName: "SysUserDeptListTotal",
			Handler:    _SysUserDeptService_SysUserDeptListTotal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sys_user_dept.proto",
}
